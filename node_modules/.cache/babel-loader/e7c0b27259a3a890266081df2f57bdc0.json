{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { authReducer } from '../redux/auth/slice';\nimport { userReducer } from './user/userSlice';\nimport { persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n})];\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    user: userReducer\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development'\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/Comp/Desktop/GOIT/HW-01/react/group_project_6_final/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","authReducer","userReducer","persistStore","storage","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","middleware","serializableCheck","ignoredActions","authPersistConfig","key","whitelist","store","reducer","auth","user","devTools","process","env","NODE_ENV","persistor"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,eAA7B;AAGA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SACEC,cADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,KANF,EAOEC,QAPF,QAQO,eARP;AAUA,MAAMC,UAAU,GAAG,CACjB,GAAGZ,oBAAoB,CAAC;AACtBa,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,cAAc,EAAE,CAACR,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADG,CAAD,CADN,CAAnB;AASA,MAAMI,iBAAiB,GAAG;AACxBC,EAAAA,GAAG,EAAE,MADmB;AAExBZ,EAAAA,OAFwB;AAGxBa,EAAAA,SAAS,EAAE,CAAC,OAAD;AAHa,CAA1B;AAOA,OAAO,MAAMC,KAAK,GAAGnB,cAAc,CAAC;AAClCoB,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEf,cAAc,CAACU,iBAAD,EAAoBd,WAApB,CADb;AAEPoB,IAAAA,IAAI,EAAEnB;AAFC,GADyB;AAKlCU,EAAAA,UALkC;AAMlCU,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AAND,CAAD,CAA5B;AASP,OAAO,MAAMC,SAAS,GAAGvB,YAAY,CAACe,KAAD,CAA9B","sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { authReducer } from '../redux/auth/slice';\r\nimport { userReducer } from './user/userSlice';\r\nimport { persistStore } from 'redux-persist';\r\n\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    user: userReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}